{"version":3,"file":"static/js/91.f09cec31.chunk.js","mappings":"kPAUMA,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,eACPE,IAAI,EAAG,cACPD,MAAM,iBACNE,SAAS,qBACZC,SAAUJ,EAAAA,GACA,kBACPE,IAAI,EAAG,cACPC,SAAS,wBAkDd,EA/CiB,SAAAE,GACf,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,MAAO,GACPG,SAAU,IAEZL,iBAAAA,EACAY,SAAU,SAACC,EAAD,GAA2B,EAAhBC,UAEnBC,QAAQC,IAAIH,GACZN,EAASU,EAAAA,EAAAA,MAAqBJ,IAC3BK,SACAC,OAAM,SAAAC,GAAK,OAAIL,QAAQC,IAAII,EAAhB,GAEf,IAGH,OACE,+BACE,kBAAMR,SAAUH,EAAOY,aAAcC,UAAW,KAAhD,WACE,uCAEE,kBACEC,KAAK,QACLC,KAAK,OACLC,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOI,OAAOX,YAGzB,mBAAO0B,QAAQ,WAAf,sBAEE,kBACEL,KAAK,WACLC,KAAK,WACLC,SAAUhB,EAAOiB,aACjBC,MAAOlB,EAAOI,OAAOR,eAGzB,mBAAQmB,KAAK,SAAb,uBAIP,C","sources":["pages/AuthPage/AuthPage.jsx"],"sourcesContent":["import { useFormik } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\n// import { toast } from 'react-toastify';\nimport authOperations from 'redux/auth/operations.auth';\nimport * as yup from 'yup';\n// import PropTypes from 'prop-types';\n\n// import s from './authPage.module.scss';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter email')\n    .min(5, 'Too Short!')\n    .email('Invalid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter password')\n    .min(8, 'Too Short!')\n    .required('Number is required'),\n});\n\nconst AuthPage = props => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      // onSubmit(values);\n      console.log(values);\n      dispatch(authOperations.login(values))\n        .unwrap()\n        .catch(error => console.log(error));\n      // resetForm();\n    },\n  });\n\n  return (\n    <>\n      <form onSubmit={formik.handleSubmit} className={null}>\n        <label>\n          E-Mail\n          <input\n            name=\"email\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n        </label>\n        <label htmlFor=\"lastName\">\n          Password\n          <input\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n        </label>\n        <button type=\"submit\">Login</button>\n      </form>\n    </>\n  );\n};\n\n// AuthPage.propTypes = {};\n\nexport default AuthPage;\n"],"names":["validationSchema","yup","email","min","required","password","props","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","resetForm","console","log","authOperations","unwrap","catch","error","handleSubmit","className","name","type","onChange","handleChange","value","htmlFor"],"sourceRoot":""}